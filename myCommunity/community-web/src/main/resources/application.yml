server:
  port: 8888
spring:
#配置文件列表
  profiles:
    #添加了这个就可以用application-projrct.yml里面的变量了
    active: project
  #系统缓存
  cache:
    type: redis
  #Druid连接池
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    druid:
      url: jdbc:mysql://${jdbc.host}/${jdbc.database}?characterEncoding=utf8&allowMultiQueries=true
      username: ${jdbc.user}
      password: ${jdbc.pass}
      # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 1000
      # 配置获取连接等待超时的时间(毫秒)
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 100000
      # 配置有一个连接在连接池中的最小生存时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000

      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql将无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能，慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  #redis缓存
  redis:
    database: 0
    # Redis服务器地址
    host: ${redis.host}
    # Redis服务器连接端口
    port: ${redis.port}
    # Redis服务器连接密码（默认为空）
    password: ${redis.pass}
    # 连接超时时间
    timeout: 10s
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 3s
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
  session:
    #选择使用redis 作为session存储
    store-type: none
  mvc:
    favicon:
      #关闭默认favicon.ico
      enabled:
    #jsp配置false
    view:
      prefix: /
      suffix: .html
  thymeleaf:
    cache: false
    enabled: false
